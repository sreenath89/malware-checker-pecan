import ConfigParser
from sqlalchemy import *
from sqlalchemy.sql import select
from sqlalchemy import Table, Column, MetaData, DATETIME, ForeignKey, Enum
from pecan import conf
import datetime

try:
    conf_dict = conf.to_dict()
    conf_file = conf_dict['conf_file']
    config = ConfigParser.ConfigParser()
    config.read(conf_file)
    sql_connection = config.get('database', 'connection', '')
except Exception as e:
    sql_connection = ''

class MalwareCheckerModel():
    """
    DB Creations take place here
    """
    metadata = MetaData()
    engine = create_engine(sql_connection, pool_recycle=3600)
    conn = engine.connect()

    #Defining the tables
    malware_data = Table('malware_data', metadata,
        Column('id', Integer, primary_key = True, unique = True, autoincrement = True, nullable = False),
        Column('domain', String(100), nullable = False),
        Column('port', Integer, default = 80, nullable = False),
        Column('query_string', String(1000), default = '', nullable = True),
        Column('category', String(100), default = 'malware', nullable = False),
        Column('is_safe', Enum('true', 'false'), default = true, nullable = False),
        Column('created_on', DATETIME, default = datetime.datetime.now(), nullable = False),
        Column('updated_on', DATETIME, default = datetime.datetime.now(), nullable = True),
    )

    #Create the table
    metadata.create_all(engine)